<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chen.dao.CommodityDao">

    <sql id="commodity">id,name,type,sellingPrice,purchasingPrice,sales,grossProfit,realityGrossProfit,IndividualProfit,firstClassification,secondClassification,thirdClassification</sql>

    <sql id="commodityInsert">
        <trim suffixOverrides=",">
            <if test="id !=null and id != ''">
                id,
            </if>
            <if test="name !=null and name != ''">
                name,
            </if>
            <if test="type !=null and type != ''">
                type,
            </if>
            <if test="sellingPrice !=null and sellingPrice != ''">
                sellingPrice,
            </if>
            <if test="purchasingPrice !=null and purchasingPrice != ''">
                purchasingPrice,
            </if>
            <if test="sales !=null and sales != ''">
                sales,
            </if>
            <if test="grossProfit !=null and grossProfit != ''">
                grossProfit,
            </if>
            <if test="realityGrossProfit !=null and realityGrossProfit != ''">
                realityGrossProfit,
            </if>
            <if test="IndividualProfit !=null and IndividualProfit != ''">
                IndividualProfit,
            </if>
            <if test="firstClassification !=null and firstClassification != ''">
                firstClassification,
            </if>
            <if test="secondClassification !=null and secondClassification != ''">
                secondClassification,
            </if>
            <if test="thirdClassification !=null and thirdClassification != ''">
                thirdClassification,
            </if>
        </trim>
    </sql>


    <sql id="commodityContent">
        <trim suffixOverrides=",">
            <if test="id !=null and id != ''">
                #{id},
            </if>
            <if test="name !=null and name != ''">
                #{name},
            </if>
            <if test="type !=null and type != ''">
                #{type},
            </if>
            <if test="sellingPrice !=null and sellingPrice != ''">
                #{sellingPrice},
            </if>
            <if test="purchasingPrice !=null and purchasingPrice != ''">
                #{purchasingPrice},
            </if>
            <if test="sales !=null and sales != ''">
                #{sales},
            </if>
            <if test="grossProfit !=null and grossProfit != ''">
                #{grossProfit},
            </if>
             <if test="realityGrossProfit !=null and realityGrossProfit != ''">
                #{realityGrossProfit},
            </if>
            <if test="IndividualProfit !=null and IndividualProfit != ''">
                #{IndividualProfit},
            </if>
            <if test="firstClassification !=null and firstClassification != ''">
                #{firstClassification},
            </if>
            <if test="secondClassification !=null and secondClassification != ''">
                #{secondClassification},
            </if>
            <if test="thirdClassification !=null and thirdClassification != ''">
                #{thirdClassification},
            </if>
        </trim>
    </sql>


    <select id="getLimitCommodity" resultType="com.chen.pojo.Commodity">
        select  c.id,c.name,c.type,c.sellingPrice,c.purchasingPrice,c.sales,c.grossProfit,c.realityGrossProfit,c.IndividualProfit,c.firstClassification,f.name as firstClassificationName,c.secondClassification,s.name as secondClassificationName,c.thirdClassification, t.name as thirdClassificationName,c.style,c.createAt,c.updateAt,c.deleteAt
            from commodity as c
            inner join firstClassification as f
            inner join secondClassification as s
            inner join thirdClassification as t
            on c. firstClassification = f.id and c.secondClassification = s.id and c.thirdClassification = t.id
             <where>
                style = 1
                 <if test="firstClassification != 0 ">
                     and firstClassification = #{firstClassification}
                 </if>
                 <if test="secondClassification != 0 ">
                     and secondClassification = #{secondClassification}
                 </if>
                 <if test="thirdClassification != 0 ">
                     and thirdClassification = #{thirdClassification}
                 </if>
             </where>
             limit #{start},#{size};
    </select>
    <!--,jdbcType=INTEGER-->
    <select id="getAllCommoditySize" resultType="java.lang.Integer">
      select count(*) from commodity
        <where>
            style = 1
            <if test="firstClassification != 0 ">
                and firstClassification = #{firstClassification}
            </if>
            <if test="secondClassification != 0 ">
                and secondClassification = #{secondClassification}
            </if>
            <if test="thirdClassification != 0 ">
                and thirdClassification = #{thirdClassification}
            </if>
        </where>;
    </select>

    <insert id="addEmpmerchandiseMessage">
        insert into commodity (<include refid="commodityInsert"/>) values (<include refid="commodityContent"/>)
    </insert>

    <select id="getMessageById" resultType="com.chen.pojo.Commodity">
        select  c.id,c.name,c.type,c.sellingPrice,c.purchasingPrice,c.sales,c.grossProfit,c.realityGrossProfit,c.IndividualProfit,c.firstClassification,f.name as firstClassificationName,c.secondClassification,s.name as secondClassificationName,c.thirdClassification, t.name as thirdClassificationName,c.style,c.createAt,c.updateAt,c.deleteAt
        from commodity as c
        inner join firstClassification as f
        inner join secondClassification as s
        inner join thirdClassification as t
        on c. firstClassification = f.id and c.secondClassification = s.id and c.thirdClassification = t.id
         where c.id = #{id}
    </select>

    <update id="updateCommodity">
        update commodity
        set name = #{name}
        , type = #{type}
        , sellingPrice = #{sellingPrice}
        , purchasingPrice = #{purchasingPrice}
        , sales = #{sales}
        where id = #{id}
    </update>

    <delete id="deleteCommodity">
        delete from commodity where id=#{id}
    </delete>

</mapper>
